{"version":3,"sources":["utils/douban.js"],"names":["URI","fetchApi","type","params","Promise","resolve","reject","wx","request","url","data","Object","assign","header","success","fail","find","page","count","search","start","q","then","res","findOne","id","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,iCAAZ;;AAEA;;;;;;;AAOA,SAASC,QAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,OAAGC,OAAH,CAAW;AACTC,WAAQT,GAAR,SAAeE,IADN;AAETQ,YAAMC,OAAOC,MAAP,CAAc,EAAd,EAAkBT,MAAlB,CAFG;AAGTU,cAAQ,EAAE,gBAAgB,kBAAlB,EAHC;AAITC,eAAST,OAJA;AAKTU,YAAMT;AALG,KAAX;AAOD,GARM,CAAP;AASD;;AAED;;;;;;;;AAQA,SAASU,IAAT,CAAed,IAAf,EAAwD;AAAA,MAAnCe,IAAmC,uEAA5B,CAA4B;AAAA,MAAzBC,KAAyB,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACtD,MAAMhB,SAAS,EAAEiB,OAAO,CAACH,OAAO,CAAR,IAAaC,KAAtB,EAA6BA,OAAOA,KAApC,EAAf;AACA,SAAOjB,SAASC,IAAT,EAAeiB,SAASR,OAAOC,MAAP,CAAcT,MAAd,EAAsB,EAAEkB,GAAGF,MAAL,EAAtB,CAAT,GAAgDhB,MAA/D,EACJmB,IADI,CACC;AAAA,WAAOC,IAAIb,IAAX;AAAA,GADD,CAAP;AAED;;AAED;;;;;AAKA,SAASc,OAAT,CAAkBC,EAAlB,EAAsB;AACpB,SAAOxB,SAAS,aAAawB,EAAtB,EACJH,IADI,CACC;AAAA,WAAOC,IAAIb,IAAX;AAAA,GADD,CAAP;AAED;;AAEDgB,OAAOC,OAAP,GAAiB,EAAEX,UAAF,EAAQQ,gBAAR,EAAjB","file":"douban.js","sourcesContent":["const URI = 'https://api.douban.com/v2/movie'\n\n/**\n * 抓取豆瓣电影特定类型的API\n * https://developers.douban.com/wiki/?title=movie_v2\n * @param  {String} type   类型，例如：'coming_soon'\n * @param  {Objece} params 参数\n * @return {Promise}       包含抓取任务的Promise\n */\nfunction fetchApi (type, params) {\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: `${URI}/${type}`,\n      data: Object.assign({}, params),\n      header: { 'Content-Type': 'application/json' },\n      success: resolve,\n      fail: reject\n    })\n  })\n}\n\n/**\n * 获取列表类型的数据\n * @param  {String} type   类型，例如：'coming_soon'\n * @param  {Number} page   页码\n * @param  {Number} count  页条数\n * @param  {String} search 搜索关键词\n * @return {Promise}       包含抓取任务的Promise\n */\nfunction find (type, page = 1, count = 20, search = '') {\n  const params = { start: (page - 1) * count, count: count }\n  return fetchApi(type, search ? Object.assign(params, { q: search }) : params)\n    .then(res => res.data)\n}\n\n/**\n * 获取单条类型的数据\n * @param  {Number} id     电影ID\n * @return {Promise}       包含抓取任务的Promise\n */\nfunction findOne (id) {\n  return fetchApi('subject/' + id)\n    .then(res => res.data)\n}\n\nmodule.exports = { find, findOne }\n"]}